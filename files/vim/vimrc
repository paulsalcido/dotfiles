execute pathogen#infect()

set nu
set hlsearch incsearch
filetype plugin on

let mapleader = "-"
let maplocalleader = "\\"

colorscheme desert

" -- will move a line down
" -_ will move a line up
nnoremap <leader>- ddp
nnoremap <leader>_ ddkP

" Search is replaced with /\v, which is better search
nnoremap / /\v

nnoremap <leader>cn :cnext<cr>
nnoremap <leader>N :setlocal number!<cr>

" Show trailing [ws]hite space.
nnoremap <leader>w :match Error /\v\s+$/<cr>
nnoremap <leader>W :match Error<cr>

" edit a readme file.
nnoremap <leader>er :call MyReadmeFile()<cr>
nnoremap <leader>ef :call EditMyVimFileDir()<cr>

" -ev to edit my vimrc.
" -sv to source my vimrc.
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

" Uppercase a word that I just finished typing with <ctrl+u>
inoremap <c-u> <esc>viwU<esc>i

" Replace escape with jk
inoremap jk <esc>
inoremap <esc> <nop>

nnoremap H <Home>
nnoremap L <End>

iabbrev mynm Paul Salcido
iabbrev ssig Paul Salcido<cr>paulsalcido.79@gmail.com
iabbrev wbst https://gitlab.salcido.io/

nnoremap <leader>" viw<esc>a"<esc>bi"<esc>lel
nnoremap <leader>' viw<esc>a'<esc>bi'<esc>lel

vnoremap <leader>" <esc>`<i"<esc>`>i"

function! MyGitRoot()
    return substitute(system('git rev-parse --show-toplevel'), '\n\+$', '', '')
endfunction

function! MyReadmeFile()
    let files = split(globpath(MyGitRoot(), 'README*'), '\n')
    if len(files) ># 0
        execute "normal! :vsplit " . files[0] . "\r\r"
    endif
endfunction

function! EditMyVimFileDir()
    let directory = $HOME . '/devel/pds-' . &filetype . '-vim-plugin/ftplugin/' . &filetype
    execute "normal! :vsplit " . directory . "\r\r"
endfunction

" Quick Comment Settings ------------------------ {{{
augroup mycomments
    autocmd!
    autocmd FileType perl   nnoremap <buffer> <localleader>c I#<esc>
    autocmd FileType python nnoremap <buffer> <localleader>c I#<esc>
    autocmd FileType vim    nnoremap <buffer> <localleader>c I"<esc>
    autocmd FileType perl   nnoremap <buffer> <localleader>s :<c-u>execute "normal! mqA;\e`q"<cr>
augroup END
" }}}

" Search Settings ------------------------------- {{{
augroup mysearch
    autocmd!
augroup END
" }}}

" Movement Settings ----------------------------- {{{
augroup mymoves
    autocmd!
    autocmd FileType perl   onoremap in( :<c-u>normal! f(vi(<cr>
    autocmd FileType perl   onoremap il( :<c-u>normal! F)vi(<cr>
    autocmd FileType perl   onoremap on( :<c-u>normal! f(va(<cr>
    autocmd FileType perl   onoremap ol( :<c-u>normal! F)va(<cr>
    autocmd FileType markdown onoremap ih :<c-u>execute "normal! ?^[-=][-=]\\+$\r:nohlsearch\rkvg_"<cr>
    autocmd FileType markdown onoremap oh :<c-u>execute "normal! ?^[-=][-=]\\+$\r:nohlsearch\rg_vk0"<cr>
    autocmd FileType markdown onoremap ih :<c-u>execute "normal! ?^[-=][-=]\\+$\r:nohlsearch\rkvg_"<cr>
    autocmd FileType markdown onoremap oh :<c-u>execute "normal! ?^[-=][-=]\\+$\r:nohlsearch\rg_vk0"<cr>
augroup END
" }}}

" MyPerl File Setting --------------------------- {{{
augroup myperl
    autocmd!
    autocmd FileType perl   iabbrev <buffer> ppp package
    autocmd FileType perl   iabbrev <buffer> PPP __PACKAGE__
    autocmd FileType perl   setlocal smartindent autoindent expandtab tabstop=4 shiftwidth=4
augroup END
" }}}

" MyRuby File Setting --------------------------- {{{
augroup myruby
    autocmd!
    autocmd FileType ruby   setlocal smartindent autoindent expandtab tabstop=2 shiftwidth=2
augroup END
" }}}

set statusline=%<%f\ %h%m%r%{FugitiveStatusline()}%=%-14.(%l,%c%V%)\ %P
